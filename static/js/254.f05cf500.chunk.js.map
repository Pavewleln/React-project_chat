{"version":3,"file":"static/js/254.f05cf500.chunk.js","mappings":"0LACA,GAAgB,QAAU,yBAAyB,OAAS,wBAAwB,KAAO,sBAAsB,QAAU,yBAAyB,aAAe,8BAA8B,aAAe,+B,0DCM1MA,EAAa,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,eAAIC,UAAWC,EAAAA,KAAf,UAAuB,SAAC,KAAD,CAASC,GAAIJ,EAAb,SAAoBD,EAAMM,UAInDC,EAAU,SAACP,GACb,OACI,eAAIG,UAAWC,EAAAA,aAAf,SAAgCJ,EAAMQ,WA8C9C,EA1CgB,SAACR,GAEb,IAAIS,EAAiBT,EAAMU,YAAYC,KAAI,SAAAC,GAAC,OAAI,SAACb,EAAD,CAAYO,KAAMM,EAAEN,MAAWM,EAAEV,OAE7EW,EAAkBb,EAAMc,eAAeH,KAAI,SAAAI,GAAC,OAAI,SAACR,EAAD,CAAoBC,QAASO,EAAEP,QAASL,UAAWC,EAAAA,MAArCW,EAAEb,OAMhEc,GAAeC,EAAAA,EAAAA,GAAiB,KAa9BC,GAAsBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,qBAAjBD,EAXL,SAACnB,GACpB,OACI,iBAAMqB,SAAUrB,EAAMsB,aAAtB,UACI,iBAAKnB,UAAWC,EAAAA,aAAhB,WACI,SAACmB,EAAA,EAAD,CAAOC,UAAWC,EAAAA,EAAUnB,KAAK,aAAaoB,YAAY,0GAAqBC,SAAU,CAACC,EAAAA,EAAeZ,MACzG,8BAQhB,OACI,iBAAKb,UAAWC,EAAAA,QAAhB,WACI,gBAAKD,UAAWC,EAAAA,OAAhB,UACI,wBACKK,OAGT,iBAAKN,UAAWC,EAAAA,QAAhB,WACI,wBACKS,KAEL,SAACK,EAAD,CAAqBG,SA9BX,SAACQ,GACnB7B,EAAM8B,WAAWD,EAAOE,sB,oBCXhC,GAAeC,E,QAAAA,KAAQC,EAAAA,EAAAA,KATD,SAACC,GACnB,MAAO,CACHxB,YAAawB,EAAMC,YAAYzB,YAC/BI,eAAgBoB,EAAMC,YAAYrB,eAClCsB,YAAaF,EAAMC,YAAYJ,cAKS,CACxCD,WAAAA,EAAAA,IAEJO,EAAAA,EAHJ,CAGsBC","sources":["webpack://react-project-1/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__K3UZn\",\"dialog\":\"Dialogs_dialog__qTpZB\",\"item\":\"Dialogs_item__NRzqe\",\"message\":\"Dialogs_message__Qx9hl\",\"message_item\":\"Dialogs_message_item__GzzR0\",\"messageInput\":\"Dialogs_messageInput__MRmMs\"};","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, requiredField} from \"../../utils/validators/validators\";\r\nimport {Textarea} from \"../common/FomrsControls/FormsControls\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n    return (\r\n        <li className={s.item}><NavLink to={path}>{props.name}</NavLink></li>\r\n    );\r\n};\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <li className={s.message_item}>{props.message}</li>\r\n    );\r\n}\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogElements = props.dialogsName.map(d => <DialogItem name={d.name} key={d.id}/>);\r\n\r\n    let messageElements = props.dialogsMessage.map(m => <Message key={m.id} message={m.message} className={s.link}/>)\r\n\r\n    const AddNewMessage = (values) => {\r\n        props.addMessage(values.newMessage)\r\n    }\r\n\r\n    let maxLength300 = maxLengthCreator(300)\r\n\r\n    const AddMessageForm = (props) =>{\r\n        return(\r\n            <form onSubmit={props.handleSubmit}>\r\n                <div className={s.messageInput}>\r\n                    <Field component={Textarea} name=\"newMessage\" placeholder=\"Напишите сообщение\" validate={[requiredField, maxLength300]}/>\r\n                    <button></button>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n\r\n    const AddMessageReduxForm = reduxForm({form: \"dialogsAddMessage\"})(AddMessageForm)\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialog}>\r\n                <ul>\r\n                    {dialogElements}\r\n                </ul>\r\n            </div>\r\n            <div className={s.message}>\r\n                <ul>\r\n                    {messageElements}\r\n                </ul>\r\n                <AddMessageReduxForm onSubmit={AddNewMessage}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dialogs;","import React, {Component} from 'react';\r\nimport {addMessage, updateNewMessage} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsName: state.dialogsPage.dialogsName,\r\n        dialogsMessage: state.dialogsPage.dialogsMessage,\r\n        newPostText: state.dialogsPage.newMessage,\r\n    }\r\n}\r\n\r\n\r\nexport default compose(connect(mapStateToProps, {\r\n        addMessage\r\n    }),\r\n    withAuthRedirect)(Dialogs);"],"names":["DialogItem","props","path","id","className","s","to","name","Message","message","dialogElements","dialogsName","map","d","messageElements","dialogsMessage","m","maxLength300","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","requiredField","values","addMessage","newMessage","compose","connect","state","dialogsPage","newPostText","withAuthRedirect","Dialogs"],"sourceRoot":""}