{"version":3,"file":"static/js/679.4e4d881d.chunk.js","mappings":";oOACA,GAAgB,QAAU,uBAAuB,WAAa,0BAA0B,QAAU,uBAAuB,MAAQ,qBAAqB,MAAQ,qBAAqB,KAAO,oBAAoB,MAAQ,qBAAqB,YAAc,2BAA2B,SAAW,wBAAwB,OAAS,sBAAsB,SAAW,wBAAwB,KAAO,oBAAoB,KAAO,oBAAoB,KAAO,8EC6Ctb,EAlCgC,SAAC,GAK7B,IAL4G,IAA9EA,EAA6E,EAA7EA,gBAAiBC,EAA4D,EAA5DA,SAAUC,EAAkD,EAAlDA,YAAaC,EAAqC,EAArCA,cAAqC,IAAtBC,YAAAA,OAAsB,MAAR,GAAQ,EAEvGC,EAAaC,KAAKC,KAAKP,EAAkBC,GAEzCO,EAAQ,GACHC,EAAI,EAAGA,GAAKJ,EAAYI,IAC7BD,EAAME,KAAKD,GAGf,IAAIE,EAAeL,KAAKC,KAAKF,EAAaD,GAC1C,GAAwCQ,EAAAA,EAAAA,UAAS,GAAjD,eAAKC,EAAL,KAAoBC,EAApB,KAEIC,GAAyBF,EAAgB,GAAKT,EAAc,EAC5DY,EAAyBH,EAAgBT,EAE7C,OACI,iBAAKa,UAAWC,EAAAA,WAAhB,UAEML,EAAgB,IACd,mBAAQI,UAAWC,EAAAA,KAAQC,QAAS,WAAQL,EAAiBD,EAAgB,IAA7E,kBAEHL,EACIY,QAAO,SAAAC,GAAC,OAAIA,GAAKN,GAAyBM,GAAGL,KAC7CM,KAAI,SAAAD,GACL,OAAQ,iBAAcJ,UAAWM,IAAIrB,IAAiBmB,GAAKH,EAAAA,SAAYC,QAAS,SAACK,GAAOrB,EAAckB,IAA9F,SAAoGA,GAAzFA,MAGrBV,EAAeE,IACb,mBAAQI,UAAWC,EAAAA,KAAQC,QAAS,WAAQL,EAAiBD,EAAgB,IAA7E,6FCwBhB,EA5C6B,SAAC,GAA8E,IAA7EY,EAA4E,EAA5EA,MAAOzB,EAAqE,EAArEA,gBAAiBC,EAAoD,EAApDA,SAAUC,EAA0C,EAA1CA,YAAaC,EAA6B,EAA7BA,cAAkBuB,GAAW,YAEvG,OAAQ,iBAAKT,UAAWC,EAAAA,MAAhB,WACJ,eAAID,UAAWC,EAAAA,QAAf,gHAEA,SAAC,EAAD,CAAUhB,YAAaA,EAAaC,cAAeA,EAAeH,gBAAiBA,EAAiBC,SAAUA,IAE7GyB,EAAMC,YAAa,SAAC,IAAD,IACpBF,EAAMH,KAAI,SAACM,GACP,OAAQ,iBAAKX,UAAWC,EAAAA,KAAhB,WACJ,iBAAKD,UAAWC,EAAAA,MAAhB,WACI,gBAAKD,UAAWC,EAAAA,MAAhB,UACI,SAAC,KAAD,CAASW,GAAI,YAAcD,EAAEE,GAA7B,UACI,gBAAKC,IAAuB,MAAlBH,EAAEI,OAAOC,MAAgBL,EAAEI,OAAOC,2zGAA2BC,IAAI,0DAGnF,gBAAKjB,UAAWC,EAAAA,UAAhB,SACKU,EAAEO,UACG,mBAAQC,SAAUV,EAAMW,oBAAoBC,MAAK,SAAAR,GAAE,OAAIA,IAAOF,EAAEE,MAAKX,QAAS,WAAOO,EAAMa,SAASX,EAAEE,KAAMb,UAAWC,EAAAA,SAAvH,2GACA,mBAAQkB,SAAUV,EAAMW,oBAAoBC,MAAK,SAAAR,GAAE,OAAIA,IAAOF,EAAEE,MAAKX,QAAS,WAAOO,EAAMc,OAAOZ,EAAEE,KAAMb,UAAWC,EAAAA,OAArH,gHAGd,iBAAKD,UAAWC,EAAAA,YAAhB,WACI,gBAAKD,UAAWC,EAAAA,KAAhB,SACKU,EAAEa,QAEP,gBAAKxB,UAAWC,EAAAA,OAAhB,SAA2BU,EAAEc,aAEjC,iBAAKzB,UAAWC,EAAAA,SAAhB,WACQ,iBAAMD,UAAWC,EAAAA,UADzB,SAOI,iBAAMD,UAAWC,EAAAA,YA1BYU,EAAEE,yCC3BtCa,EAAW,SAACC,GACrB,OAAOA,EAAMC,UAAUpB,OAEdqB,EAAc,SAACF,GACxB,OAAOA,EAAMC,UAAU5C,UAEd8C,EAAoB,SAACH,GAC9B,OAAOA,EAAMC,UAAU7C,iBAEdgD,EAAiB,SAACJ,GAC3B,OAAOA,EAAMC,UAAU3C,aAEd+C,EAAgB,SAACL,GAC1B,OAAOA,EAAMC,UAAUlB,YAEduB,EAAyB,SAACN,GACnC,OAAOA,EAAMC,UAAUR,qBCWrBc,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GAOD,OAPCA,EAAAA,EAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KAKFhD,cAAgB,SAACiD,GACb,EAAK1B,MAAM2B,mBAAmBD,EAAY,EAAK1B,MAAMzB,WACxD,EAgBA,OAhBA,yCAND,WACIqD,KAAK5B,MAAM6B,cAAcD,KAAK5B,MAAMxB,YAAaoD,KAAK5B,MAAMzB,YAC/D,oBAMD,WACI,OAAO,+BACH,SAAC,EAAD,CACIwB,MAAO6B,KAAK5B,MAAMD,MAClBxB,SAAUqD,KAAK5B,MAAMzB,SACrBD,gBAAiBsD,KAAK5B,MAAM1B,gBAC5BE,YAAaoD,KAAK5B,MAAMxB,YACxBsC,OAAQc,KAAK5B,MAAMc,OACnBD,SAAUe,KAAK5B,MAAMa,SACrBpC,cAAemD,KAAKnD,cACpBwB,WAAY2B,KAAK5B,MAAMC,WACvBU,oBAAqBiB,KAAK5B,MAAMW,4BAG3C,EAvBCc,CAA0BK,EAAAA,WAsChC,GAAeC,EAAAA,EAAAA,KACXC,EAAAA,EAAAA,KAbkB,SAACd,GACnB,MAAO,CACHnB,MAAOkB,EAASC,GAChB3C,SAAU6C,EAAYF,GACtB5C,gBAAiB+C,EAAkBH,GACnC1C,YAAa8C,EAAeJ,GAC5BjB,WAAYsB,EAAcL,GAC1BP,oBAAqBa,EAAuBN,MAQ5C,CAACJ,OAAAA,EAAAA,GAAQD,SAAAA,EAAAA,GAAUoB,eAAAA,EAAAA,GAAgBC,wBAAAA,EAAAA,GAAyBL,cAAAA,EAAAA,GAAeF,mBAAAA,EAAAA,KAHnF,CAIEF,uBCvEF,OAOC,WACA,aAEA,IAAIU,EAAS,GAAGC,eAEhB,SAASC,IAGR,IAFA,IAAIC,EAAU,GAELvD,EAAI,EAAGA,EAAIwD,UAAUC,OAAQzD,IAAK,CAC1C,IAAI0D,EAAMF,UAAUxD,GACpB,GAAK0D,EAAL,CAEA,IAAIC,SAAiBD,EAErB,GAAgB,WAAZC,GAAoC,WAAZA,EAC3BJ,EAAQtD,KAAKyD,QACP,GAAIE,MAAMC,QAAQH,IACxB,GAAIA,EAAID,OAAQ,CACf,IAAIK,EAAQR,EAAWS,MAAM,KAAML,GAC/BI,GACHP,EAAQtD,KAAK6D,SAGT,GAAgB,WAAZH,EACV,GAAID,EAAIM,WAAaC,OAAOC,UAAUF,SACrC,IAAK,IAAIG,KAAOT,EACXN,EAAOgB,KAAKV,EAAKS,IAAQT,EAAIS,IAChCZ,EAAQtD,KAAKkE,QAIfZ,EAAQtD,KAAKyD,EAAIM,aAKpB,OAAOT,EAAQc,KAAK,KAGgBC,EAAOC,SAC3CjB,EAAWkB,QAAUlB,EACrBgB,EAAOC,QAAUjB,QAGX,kBACL,OAAOA,GADF,QAAe,OAAf,aA5CP","sources":["webpack://react-project-1/./src/components/Users/users.module.css?9211","components/Users/Paginate.tsx","components/Users/Users.tsx","redux/users-selectors.ts","components/Users/UsersContainer.tsx","../node_modules/classnames/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"h_title\":\"users_h_title__oXeY9\",\"pagination\":\"users_pagination__74EKt\",\"checked\":\"users_checked__3iFFV\",\"users\":\"users_users__OLi+5\",\"photo\":\"users_photo__pE8NE\",\"user\":\"users_user__vLUuW\",\"title\":\"users_title__3rtEH\",\"description\":\"users_description__sxZNF\",\"location\":\"users_location__2dnVz\",\"follow\":\"users_follow__g83yQ\",\"unfollow\":\"users_unfollow__n6sS3\",\"name\":\"users_name__elJs9\",\"next\":\"users_next__v4scK\",\"prev\":\"users_prev__HMVDv\"};","import React, {FC, useState} from 'react';\r\nimport s from \"./users.module.css\";\r\nimport cn from 'classnames'\r\n\r\ntype PropsType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    portionSize?: number\r\n}\r\n\r\nconst Paginate: FC<PropsType> = ({totalUsersCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (\r\n        <div className={s.pagination}>\r\n\r\n            { portionNumber > 1 &&\r\n                <button className={s.prev} onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\r\n\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n                .map(p => {\r\n                return (<span key={p} className={cn((currentPage) === p && s.checked)} onClick={(e) => {onPageChanged(p)}}>{p}</span>);\r\n            })}\r\n\r\n            { portionCount > portionNumber &&\r\n                <button className={s.next} onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Paginate;","import React, {FC} from 'react';\nimport s from './users.module.css';\nimport photoUsersDefault from '../../img/Users/default-users-photo.png';\nimport {NavLink} from \"react-router-dom\";\nimport Preloader from \"../common/preloader\";\nimport Paginate from \"./Paginate\";\nimport {usersType} from \"../../types/types\";\n\ntype PropsType = {\n    users: Array<usersType>\n    followingInProgress: Array<number>\n    isFetching: boolean\n    follow: (id: number) => void\n    unfollow: (id: number) => void\n    totalUsersCount: number\n    pageSize: number\n    currentPage: number\n    onPageChanged: (pageNumber: number) => void\n}\n\nconst Users: FC<PropsType> = ({users, totalUsersCount, pageSize, currentPage, onPageChanged, ...props}) => {\n\n    return (<div className={s.users}>\n        <h3 className={s.h_title}>Пользователи сети</h3>\n        {/*Пагинация*/}\n        <Paginate currentPage={currentPage} onPageChanged={onPageChanged} totalUsersCount={totalUsersCount} pageSize={pageSize}/>\n        {/*Пользователи*/}\n        {props.isFetching ? <Preloader/> :\n        users.map((u) => {\n            return (<div className={s.user} key={u.id}>\n                <div className={s.title}>\n                    <div className={s.photo}>\n                        <NavLink to={'/profile/' + u.id}>\n                            <img src={u.photos.small != null ? u.photos.small : photoUsersDefault} alt='Картинка'/>\n                        </NavLink>\n                    </div>\n                    <div className={s.following}>\n                        {u.followed\n                            ? <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {props.unfollow(u.id)}} className={s.unfollow}>Удалить из друзей</button>\n                            : <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {props.follow(u.id)}} className={s.follow}>Добавить в друзья</button>}\n                    </div>\n                </div>\n                <div className={s.description}>\n                    <div className={s.name}>\n                        {u.name}\n                    </div>\n                    <div className={s.status}>{u.status}</div>\n                </div>\n                <div className={s.location}>\n                        <span className={s.country}>\n                            {/*{u.location.country}*/}\n                        </span>\n                    {/*Пробел*/}\n                    ,&nbsp;\n                    {/*Пробел*/}\n                    <span className={s.city}>\n                            {/*{u.location.city}*/}\n                        </span>\n                </div>\n            </div>)\n        })}\n    </div>);\n}\n\nexport default Users;","import {appStateType} from \"./redux-store\";\n\nexport const getUsers = (state: appStateType) =>{\n    return state.usersPage.users\n}\nexport const getPageSize = (state: appStateType) =>{\n    return state.usersPage.pageSize\n}\nexport const geTotalUsersCount = (state: appStateType) =>{\n    return state.usersPage.totalUsersCount\n}\nexport const getCurrentPage = (state: appStateType) =>{\n    return state.usersPage.currentPage\n}\nexport const getIsFetching = (state: appStateType) =>{\n    return state.usersPage.isFetching\n}\nexport const getFollowingInProgress = (state: appStateType) =>{\n    return state.usersPage.followingInProgress\n}\n","import React from 'react';\nimport Users from './Users';\nimport {connect} from 'react-redux';\nimport {follow, unfollow, getUsersThunk, setCurrentPage, toggleFollowingProgress, onPageChangedThunk} from \"../../redux/users-reducer\";\nimport {compose} from \"redux\";\nimport {getCurrentPage, getFollowingInProgress, getIsFetching, geTotalUsersCount, getPageSize, getUsers} from \"../../redux/users-selectors\";\nimport {usersType} from \"../../types/types\";\nimport {appStateType} from \"../../redux/redux-store\";\n\ntype mapStateToPropsType = {\n    currentPage: number\n    pageSize: number\n    users: Array<usersType>\n    totalUsersCount: number\n    isFetching: boolean\n    followingInProgress: Array<number>\n}\ntype mapDispatchToPropsType = {\n    follow: (id: number) => void\n    unfollow: (id: number) => void\n    onPageChanged: (pageNumber: number) => void\n    getUsersThunk: (currentPage: number, pageSize: number) => void\n    onPageChangedThunk: (pageNumber: number, pageSize: number) => void\n}\ntype ownToPropsType = {\n    //empty\n}\ntype PropsType = mapStateToPropsType & mapDispatchToPropsType & ownToPropsType\n\nclass UsersAPIComponent extends React.Component<PropsType> {\n    componentDidMount() {\n        this.props.getUsersThunk(this.props.currentPage, this.props.pageSize)\n    }\n\n    onPageChanged = (pageNumber: number) => {\n        this.props.onPageChangedThunk(pageNumber, this.props.pageSize)\n    }\n\n    render() {\n        return <>\n            <Users\n                users={this.props.users}\n                pageSize={this.props.pageSize}\n                totalUsersCount={this.props.totalUsersCount}\n                currentPage={this.props.currentPage}\n                follow={this.props.follow}\n                unfollow={this.props.unfollow}\n                onPageChanged={this.onPageChanged}\n                isFetching={this.props.isFetching}\n                followingInProgress={this.props.followingInProgress}\n            />\n        </>\n    }\n}\n\nlet mapStateToProps = (state: appStateType):mapStateToPropsType => {\n    return {\n        users: getUsers(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: geTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingInProgress: getFollowingInProgress(state)\n\n    }\n}\n\nexport default compose(\n    connect(\n        mapStateToProps,\n        {follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsersThunk, onPageChangedThunk})\n)(UsersAPIComponent);","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"names":["totalUsersCount","pageSize","currentPage","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","className","s","onClick","filter","p","map","cn","e","users","props","isFetching","u","to","id","src","photos","small","alt","followed","disabled","followingInProgress","some","unfollow","follow","name","status","getUsers","state","usersPage","getPageSize","geTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersAPIComponent","pageNumber","onPageChangedThunk","this","getUsersThunk","React","compose","connect","setCurrentPage","toggleFollowingProgress","hasOwn","hasOwnProperty","classNames","classes","arguments","length","arg","argType","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","module","exports","default"],"sourceRoot":""}